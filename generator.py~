# generate a bank of hard puzzles

import time, random

from sudoku3 import *


def generate(cutoff=0.02, showif=0.02):
    """Attempt to solve a sequence of grids. Report results.  
    When showif is a number of seconds, display puzzles that take longer.                                                 
    When showif is None, don't display any puzzles."""
    def time_solve(grid):
        start = time.process_time()
        values = solve(grid)
        t = time.process_time()-start
        ## Display puzzles that take long enough
        if showif is not None and t > showif:
            display(grid_values(grid))
            if values: display(values)
            print ('(%.2f seconds)\n' % t)
        return (t, solved(values))
    def save2file(grid):
        with open('puzzle_bank.txt','a') as f:
            f.write(grid)
    for i in range(10000):
        grid = random_puzzle()
        t, r = time_solve(grid)
        if ( t > cutoff ):
            print('save',i,' time: ',t)
            save2file(grid)
        #if (i % 100 == 0): print(i) 

        

if __name__ == "__main__":
    generate(showif=None)
